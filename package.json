{
    "name": "plang-extension",
    "displayName": "plang-extension",
    "description": "Add support for plang programming language to VS Code",
    "version": "0.1.20",
    "icon": "logo.png",
    "engines": {
        "vscode": "^1.79.0"
    },
    "repository": {
        "url": "https://github.com/PLangHQ/plang.vscodeextension"
    },
    "publisher": "PlangHQ",
    "author": { "name": "Ingi Gauti"},
    "bugs": { "url": "https://github.com/PLangHQ/plang.vscodeextension/issues"},
    "homepage": "https://plang.is",
    "keywords": ["plang", "ide"],
    "categories": [
        "Programming Languages", "Debuggers" 
    ],
    "activationEvents": [
        "onLanguage:goal",
        "onDebug:goal"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "configurationDefaults": {
          "editor.hover.sticky": true,
          "editor.hover.delay": 500
        },
        "languages": [
            {
                "id": "goal",
                "extensions": [
                    ".goal"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [{
            "language": "goal",
            "scopeName": "source.goal",
            "path": "./syntaxes/goal.tmLanguage.json"
        }],
        "breakpoints": [
            {
                "language": "goal"
            }
        ],
        "debuggers": [
            {
                "type": "goal",
                "label": "Goal Debugger",
                "program": "./dist/extension.js",
                "runtime": "node",
                "languages": [
                    "goal"
                ]
            }
        ],
        "inputs": [
            {
                "id": "parameterName",
                "type": "promptString",
                "description": "Please enter a parameter value.",
                "default": ""
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "extension.regenerateStep",
                    "group": "navigation",
                    "when": "resourceExtname == .goal"
                },
                {
                    "command": "extension.findUsage",
                    "group": "navigation",
                    "when": "resourceExtname == .goal"
                }
            ],
            
            "editor/lineNumber/context": [
                {
                    "command": "extension.goToLine",
                    "group": "navigation"
                }
            ]
        },
        "commands": [
            {
                "command": "extension.goToLine",
                "title": "Run from here"
            },
            {
                "command": "extension.regenerateStep",
                "title": "Regenerate step"
            },
            {
                "command": "extension.findUsage",
                "title": "Find usage of goal"
            },
            {
                "command": "extension.startPLangDebug",
                "title": "Start PLang Debug"
            },
            {
                "command": "plang.selectLLMService",
                "title": "Select Plang LLM Service"
            }
        ],
        "keybindings": [
            {
                "command": "extension.regenerateStep",
                "key": "ctrl+shift+b",
                "mac": "cmd+k"
            },
            {
                "command": "extension.startPLangDebug",
                "key": "f5",
                "when": "editorTextFocus"
            },
            {
                "key": "f12",
                "command": "extension.goToGoal"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "PLang",
                    "title": "PLang",
                    "icon": "media/icon.svg"
                }
            ]
        },
        "views": {
            "PLang": [
                {
                    "id": "code",
                    "name": "Code"
                },
                {
                    "id": "documentation",
                    "name": "Documentation"
                },
                {
                    "id": "source",
                    "name": "Source"
                }
            ]
        },
        "configuration": {
            "title": "Plang Settings",
            "properties": {
                "plang.llmservice": {
                    "type": "string",
                    "default": "plang",
                    "enum": ["plang", "openai"],
                    "enumDescriptions": [
                        "Uses PLang LLM service",
                        "Uses OpenAI service - You need OpenAI API key"
                    ],
                    "description": "Choose LLM service"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "webpack --config webpack.config.js",
        "watch": "webpack --config webpack.config.js --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/express": "^4.17.20",
        "@types/glob": "^8.1.0",
        "@types/jsonpath": "^0.2.2",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@types/vscode": "^1.79.0",
        "@typescript-eslint/eslint-plugin": "^5.59.1",
        "@typescript-eslint/parser": "^5.59.1",
        "@vscode/debugadapter": "^1.63.0",
        "@vscode/test-electron": "^2.3.0",
        "eslint": "^8.39.0",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "ts-loader": "^9.4.2",
        "typescript": "^5.1.6",
        "webpack": "^5.81.0",
        "webpack-cli": "^5.1.4"
    },
    "dependencies": {
        "@types/chokidar": "^2.1.3",
        "@vscode/debugprotocol": "^1.63.0",
        "await-notify": "^1.0.1",
        "chokidar": "^3.5.3",
        "express": "^4.18.2",
        "jsonpath": "^1.1.1",
        "node-fetch": "^3.3.2"
    }
}
